>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix_divided([[2, 7, 3.5], [5, 0, 11.2]], 2)
[[1.0, 3.5, 1.75], [2.5, 0.0, 5.6]]

>>> matrix_divided([[4, 8], [2, 10]], 2)
[[2.0, 4.0], [1.0, 5.0]]

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix_divided([10, 22, 8], [1.2, 15.68, 0], float(inf))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

>>> matrix_divided([[1, 2], [3]], 3)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1, 2], ["3", 4]], 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2], [3, 4]], "3")
Traceback (most recent call last):
    ...
TypeError: div must be a number

>>> matrix_divided([[1, 2], [3, 4]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

>>> matrix_divided([[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
TypeError: div must be a number

>>> matrix_divided(5)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided()
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[2, 3], []], 5)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats